@model HJStudio.Models.EmployeeModel

@{
    ViewBag.Title = "Employee Registration";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


@using (Html.BeginForm("AddEmps", "EmployeeMaster", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <!--begin::Portlet-->
<div class="m-portlet m-portlet--tab">
    <div class="m-portlet__head">
        <div class="m-portlet__head-caption">
            <div class="m-portlet__head-title">
                <span class="m-portlet__head-icon m--hide">
                    <i class="la la-gear"></i>
                </span>
                <h3 class="m-portlet__head-text">
                    Employee
                </h3>
            </div>
        </div>
    </div>
    <!--begin::Form-->
    <div class="m-form m-form--fit m-form--label-align-right">
        <div class="m-portlet__body">

            <div class="form-group m-form__group row">
                <div class=" col-6 row">
                    <label for="example-text-input" class="col-4 col-form-label"> Name :</label>
                    <div class="col-8">
                        @Html.EditorFor(x => x.Name, new { htmlAttributes = new { @class = "form-control m-input--air", type = "text" } })
                        @Html.ValidationMessageFor(x => x.Name, "", new { @class = "text-danger" })
                        @Html.HiddenFor(x => x.EmployeeID)
                    </div>
                </div>
                <div class="col-6 row">
                    <label for="example-search-input" class="col-4 col-form-label">Mobile No :</label>
                    <div class="col-8">
                        @Html.EditorFor(x => x.MobileNo, new { htmlAttributes = new { @class = "form-control m-input--air", type = "text" } })
                        @Html.ValidationMessageFor(x => x.MobileNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group m-form__group row">
                <div class=" col-6 row">
                    <label for="example-text-input" class="col-4 col-form-label">User Type :</label>
                    <div class="col-8">
                        @Html.DropDownListFor(x => x.UserType, ViewBag.Userlist as SelectList, "Select User Type", new { @class = "form-control Select2DropDown", })
                        @*@Html.EditorFor(x => x.EventType, new { htmlAttributes = new { @class = "form-control m-input--air", type = "text" } })*@
                        @Html.ValidationMessageFor(x => x.UserType, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-6 row">
                    <label for="example-search-input" class="col-4 col-form-label">Email-Id :</label>
                    <div class="col-8">
                        @Html.EditorFor(x => x.EmailId, new { htmlAttributes = new { @class = "form-control m-input--air", type = "text" } })
                        @Html.ValidationMessageFor(x => x.EmailId, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group m-form__group row">
                <div class="col-6 row">
                    <label for="example-search-input" class="col-4 col-form-label">Password :</label>
                    <div class="col-8">
                        @Html.EditorFor(x => x.Password, new { htmlAttributes = new { @class = "form-control m-input--air", type = "password" } })
                        @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-6 row">
                    <label for="example-search-input" class="col-4 col-form-label">Confirm Password :</label>
                    <div class="col-8">
                        @Html.EditorFor(x => x.ConfirmPassword, new { htmlAttributes = new { @class = "form-control m-input--air", type = "password" } })
                        @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
            <div class="form-group m-form__group row">
                <div class="col-6 row">
                    <label for="example-search-input" class="col-4 col-form-label">Address 1 :</label>
                    <div class="col-8">
                        @Html.EditorFor(x => x.Address1, new { htmlAttributes = new { @class = "form-control m-input--air", type = "text" } })
                        @Html.ValidationMessageFor(x => x.Address1, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-6 row">
                    <label for="example-search-input" class="col-4 col-form-label">Address 2 :</label>
                    <div class="col-8">
                        @Html.EditorFor(x => x.Address2, new { htmlAttributes = new { @class = "form-control m-input--air", type = "text" } })
                        @Html.ValidationMessageFor(x => x.Address2, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group m-form__group row">
                <div class="col-6 row">
                    <label for="example-search-input" class="col-4 col-form-label">City :</label>
                    <div class="col-8">
                        @Html.EditorFor(x => x.City, new { htmlAttributes = new { @class = "form-control m-input--air", type = "text" } })
                        @Html.ValidationMessageFor(x => x.City, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-6 row">
                    <label for="example-search-input" class="col-4 col-form-label">State :</label>
                    <div class="col-8">
                        @Html.EditorFor(x => x.State, new { htmlAttributes = new { @class = "form-control m-input--air", type = "text" } })
                        @Html.ValidationMessageFor(x => x.State, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group m-form__group row">
                <div class="col-6 row">
                    <label for="example-search-input" class="col-4 col-form-label">Monthly Wages :</label>
                    <div class="col-8">
                        @Html.EditorFor(x => x.MonthlyWages, new { htmlAttributes = new { @class = "form-control m-input--air", type = "text" } })
                        @Html.ValidationMessageFor(x => x.MonthlyWages, "", new { @class = "text-danger" })
                    </div>
                </div>
                <div class="col-6 row">
                    <label for="example-search-input" class="col-4 col-form-label">Daily Wages :</label>
                    <div class="col-8">
                        @Html.EditorFor(x => x.DailyWages, new { htmlAttributes = new { @class = "form-control m-input--air", type = "text" } })
                        @Html.ValidationMessageFor(x => x.DailyWages, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="form-group m-form__group row">
                <div class="col-6 row">
                    <label for="example-search-input" class="col-4 col-form-label">City :</label>
                    <div class="col-8">
                        @Html.EditorFor(x => x.HalfDayWages, new { htmlAttributes = new { @class = "form-control m-input--air", type = "text" } })
                        @Html.ValidationMessageFor(x => x.HalfDayWages, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="col-6 row">
                        <label for="example-search-input" class="col-4 col-form-label">State :</label>
                        <div class="col-8">
                            @Html.EditorFor(x => x.State, new { htmlAttributes = new { @class = "form-control m-input--air", type = "password" } })
                            @Html.ValidationMessageFor(x => x.State, "", new { @class = "text-danger" })
                        </div>
                    </div>*@
            </div>

        </div>

        <div class="m-portlet__foot m-portlet__foot--fit">
            <div class="m-form__actions">
                <div class="row">
                    <div class="col-2">
                    </div>
                    <div class="col-10">
                        <button type="submit" class="btn btn-success"> Add Employee</button>
                        <a href="~/EmployeeMaster/ViewEmployee" class="btn btn-secondary">Cancel</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
}


<script>
    $(".Select2DropDown").select2();
</script>